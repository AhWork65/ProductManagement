// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.DataAccess.AppContext;

#nullable disable

namespace ProductManagement.DataAccess.Migrations
{
    [DbContext(typeof(Management_ProductsContext))]
    partial class Management_ProductsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1256_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductManagement.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaseUnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_id");

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("UnitStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0.0))");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Products_Category_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.ProductAttributeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddedUnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AttributeId" }, "IX_Product_AttributeDetail_AttributeId");

                    b.HasIndex(new[] { "ProductId" }, "IX_Product_AttributeDetail_ProductId");

                    b.ToTable("Product_AttributeDetail", (string)null);
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.RelatedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaseProductId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BaseProductId" }, "IX_RelatedProducts_BaseProductId");

                    b.HasIndex(new[] { "RelatedProductId" }, "IX_RelatedProducts_RelatedProductId");

                    b.ToTable("RelatedProducts");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.Attribute", b =>
                {
                    b.HasOne("ProductManagementWebApi.Models.Attribute", "ParentNode")
                        .WithMany("subNodes")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentNode");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.Product", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.ProductAttributeDetail", b =>
                {
                    b.HasOne("ProductManagementWebApi.Models.Attribute", "Attribute")
                        .WithMany("ProductAttributeDetails")
                        .HasForeignKey("AttributeId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_AttributeDetail_Attributes");

                    b.HasOne("ProductManagementWebApi.Models.Product", "Product")
                        .WithMany("ProductAttributeDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_AttributeDetail_Products");

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.RelatedProduct", b =>
                {
                    b.HasOne("ProductManagementWebApi.Models.Product", "BaseProduct")
                        .WithMany("RelatedProductBaseProducts")
                        .HasForeignKey("BaseProductId")
                        .IsRequired()
                        .HasConstraintName("FK_RelatedGoods_Goods_BaseGood");

                    b.HasOne("ProductManagementWebApi.Models.Product", "RelatedProductNavigation")
                        .WithMany("RelatedProductRelatedProductNavigations")
                        .HasForeignKey("RelatedProductId")
                        .IsRequired()
                        .HasConstraintName("FK_RelatedGoods_Goods_Related");

                    b.Navigation("BaseProduct");

                    b.Navigation("RelatedProductNavigation");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.Attribute", b =>
                {
                    b.Navigation("ProductAttributeDetails");

                    b.Navigation("subNodes");
                });

            modelBuilder.Entity("ProductManagementWebApi.Models.Product", b =>
                {
                    b.Navigation("ProductAttributeDetails");

                    b.Navigation("RelatedProductBaseProducts");

                    b.Navigation("RelatedProductRelatedProductNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
